{"ast":null,"code":"var _jsxFileName = \"/app/src/SpotifyRandom.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { useGetSpotifyRandomQuery } from \"./app/apiSlice\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpotifyRandom() {\n  _s();\n\n  // const searchCriteria = useSelector((state) => state.search.value);\n  const {\n    data,\n    error,\n    isLoading\n  } = useGetSpotifyRandomQuery();\n  console.log({\n    data,\n    error,\n    isLoading\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Loading...\"\n  }, void 0, false); // const filteredData = () => {\n  //   if (searchCriteria)\n  //     return data.playlists.filter((playlists) =>\n  //       playlists.name.includes(searchCriteria)\n  //     );\n  //   return data.playlists;\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SpotifyRandom, \"3AyVXVDEZF1Cu/7lfkTnTMQoLhg=\", false, function () {\n  return [useGetSpotifyRandomQuery];\n});\n\n_c = SpotifyRandom;\nexport default SpotifyRandom;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotifyRandom\");","map":{"version":3,"names":["useSelector","useGetSpotifyRandomQuery","SpotifyRandom","data","error","isLoading","console","log"],"sources":["/app/src/SpotifyRandom.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { useGetSpotifyRandomQuery } from \"./app/apiSlice\";\n\nfunction SpotifyRandom() {\n  // const searchCriteria = useSelector((state) => state.search.value);\n  const { data, error, isLoading } = useGetSpotifyRandomQuery();\n  console.log({ data, error, isLoading });\n\n  if (isLoading) return <>Loading...</>;\n\n  // const filteredData = () => {\n  //   if (searchCriteria)\n  //     return data.playlists.filter((playlists) =>\n  //       playlists.name.includes(searchCriteria)\n  //     );\n  //   return data.playlists;\n  // };\n\n  return (\n    <>\n      <h1>Hi</h1>\n      {/* <h1 className=\"mt-3\">\n        Playlist{\" \"}\n        {searchCriteria && (\n          // <small className=\"text-body-secondary\">\"{searchCriteria}\"</small>\n        // )}\n      </h1> */}\n    </>\n  );\n}\n\nexport default SpotifyRandom;\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,wBAAT,QAAyC,gBAAzC;;;;AAEA,SAASC,aAAT,GAAyB;EAAA;;EACvB;EACA,MAAM;IAAEC,IAAF;IAAQC,KAAR;IAAeC;EAAf,IAA6BJ,wBAAwB,EAA3D;EACAK,OAAO,CAACC,GAAR,CAAY;IAAEJ,IAAF;IAAQC,KAAR;IAAeC;EAAf,CAAZ;EAEA,IAAIA,SAAJ,EAAe,oBAAO;IAAA;EAAA,iBAAP,CALQ,CAOvB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAWD;;GA1BQH,a;UAE4BD,wB;;;KAF5BC,a;AA4BT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}