{"ast":null,"code":"var _jsxFileName = \"/app/src/AlbumInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useGetSpotifyAlbumQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlbumInfo = () => {\n  _s();\n\n  const location = useLocation();\n  const {\n    data\n  } = location.state;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"HH\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this); // const { data: album, isLoading } = useGetSpotifyAlbumQuery(data.album[\"id\"]);\n  // if (isLoading) {\n  //   return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  // }\n  // return (\n  //   data && (\n  //     <div className=\"row mt-3\">\n  //       <h1>\n  //         <img\n  //           src={album[0][\"album_info\"][\"image\"]}\n  //           width=\"200px\"\n  //           height=\"200px\"\n  //         ></img>\n  //       </h1>\n  //       <h1>{album[0][\"album_info\"][\"name\"]}</h1>\n  //       <table className=\"table table-striped\">\n  //         <thead>\n  //           <tr>\n  //             <th>#</th>\n  //             <th>Name</th>\n  //             <th>Length</th>\n  //           </tr>\n  //         </thead>\n  //         <tbody>\n  //           {album[0]?.tracks.map((tracks) => {\n  //             return (\n  //               <tr key={tracks.id}>\n  //                 <td>{tracks.track_number}</td>\n  //                 <td>{tracks.name}</td>\n  //                 <td>{tracks.duration_ms}</td>\n  //               </tr>\n  //             );\n  //           })}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   )\n  // );\n};\n\n_s(AlbumInfo, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = AlbumInfo;\nexport default AlbumInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumInfo\");","map":{"version":3,"names":["useGetSpotifyAlbumQuery","useLocation","AlbumInfo","location","data","state","console","log"],"sources":["/app/src/AlbumInfo.js"],"sourcesContent":["import { useGetSpotifyAlbumQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\n\nconst AlbumInfo = () => {\n  const location = useLocation();\n  const { data } = location.state;\n  console.log(data);\n\n  return <h1>HH</h1>;\n\n  // const { data: album, isLoading } = useGetSpotifyAlbumQuery(data.album[\"id\"]);\n\n  // if (isLoading) {\n  //   return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  // }\n\n  // return (\n  //   data && (\n  //     <div className=\"row mt-3\">\n  //       <h1>\n  //         <img\n  //           src={album[0][\"album_info\"][\"image\"]}\n  //           width=\"200px\"\n  //           height=\"200px\"\n  //         ></img>\n  //       </h1>\n  //       <h1>{album[0][\"album_info\"][\"name\"]}</h1>\n  //       <table className=\"table table-striped\">\n  //         <thead>\n  //           <tr>\n  //             <th>#</th>\n  //             <th>Name</th>\n  //             <th>Length</th>\n  //           </tr>\n  //         </thead>\n  //         <tbody>\n  //           {album[0]?.tracks.map((tracks) => {\n  //             return (\n  //               <tr key={tracks.id}>\n  //                 <td>{tracks.track_number}</td>\n  //                 <td>{tracks.name}</td>\n  //                 <td>{tracks.duration_ms}</td>\n  //               </tr>\n  //             );\n  //           })}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   )\n  // );\n};\nexport default AlbumInfo;\n"],"mappings":";;;AAAA,SAASA,uBAAT,QAAwC,gBAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EACA,MAAM;IAAEG;EAAF,IAAWD,QAAQ,CAACE,KAA1B;EACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EAEA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP,CALsB,CAOtB;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CA/CD;;GAAMF,S;UACaD,W;;;KADbC,S;AAgDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}