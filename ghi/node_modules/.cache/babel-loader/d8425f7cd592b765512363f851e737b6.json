{"ast":null,"code":"var _jsxFileName = \"/app/src/AlbumInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useGetSpotifyAlbumQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlbumInfo = () => {\n  _s();\n\n  var _artist$;\n\n  const location = useLocation();\n  const {\n    data\n  } = location.state;\n  const {\n    data: artist,\n    isLoading\n  } = useGetSpotifyAlbumQuery(data.artist[\"id\"]);\n  console.log(artist); //   console.log(data && data[0][2][\"albums_info\"]);\n  //   const bro = data && data[0][1][\"tracks_info\"];\n  //   console.log(\"?????????????????????????\", bro);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return data && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: artist[0][\"artist_info\"][0][\"image\"],\n        width: \"200px\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: artist[0][\"artist_info\"][0][\"name\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Albums\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Release date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: (_artist$ = artist[0]) === null || _artist$ === void 0 ? void 0 : _artist$.albums_info.map(albums => {\n          console.log(albums.id);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: albums.image,\n                width: \"90px\",\n                height: \"90px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/album-info/${albums.id}`,\n                state: {\n                  data: {\n                    albums\n                  }\n                },\n                children: albums.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: albums.total_tracks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: albums.release_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)]\n          }, albums.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AlbumInfo, \"dvolU+wGCU0/k2AVDGE22800ivM=\", false, function () {\n  return [useLocation, useGetSpotifyAlbumQuery];\n});\n\n_c = AlbumInfo;\nexport default AlbumInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumInfo\");","map":{"version":3,"names":["useGetSpotifyAlbumQuery","useLocation","Link","AlbumInfo","location","data","state","artist","isLoading","console","log","albums_info","map","albums","id","image","name","total_tracks","release_date"],"sources":["/app/src/AlbumInfo.js"],"sourcesContent":["import { useGetSpotifyAlbumQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst AlbumInfo = () => {\n  const location = useLocation();\n  const { data } = location.state;\n\n  const { data: artist, isLoading } = useGetSpotifyAlbumQuery(\n    data.artist[\"id\"]\n  );\n  console.log(artist);\n  //   console.log(data && data[0][2][\"albums_info\"]);\n  //   const bro = data && data[0][1][\"tracks_info\"];\n  //   console.log(\"?????????????????????????\", bro);\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n\n  return (\n    data && (\n      <div className=\"row mt-3\">\n        <h1>\n          <img\n            src={artist[0][\"artist_info\"][0][\"image\"]}\n            width=\"200px\"\n            height=\"200px\"\n          ></img>\n        </h1>\n        <h1>{artist[0][\"artist_info\"][0][\"name\"]}</h1>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Albums</th>\n              {/* <th>Songs</th> */}\n              <th>Title</th>\n              <th>Total Tracks</th>\n              <th>Release date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {artist[0]?.albums_info.map((albums) => {\n              console.log(albums.id);\n              return (\n                <tr key={albums.id}>\n                  <td>\n                    <img src={albums.image} width=\"90px\" height=\"90px\"></img>\n                  </td>\n                  <td>\n                    <Link\n                      to={`/album-info/${albums.id}`}\n                      state={{ data: { albums } }}\n                    >\n                      {albums.name}\n                    </Link>\n                  </td>\n                  <td>{albums.total_tracks}</td>\n                  <td>{albums.release_date}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  );\n};\nexport default AlbumInfo;\n"],"mappings":";;;AAAA,SAASA,uBAAT,QAAwC,gBAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAAA;;EACtB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAM;IAAEI;EAAF,IAAWD,QAAQ,CAACE,KAA1B;EAEA,MAAM;IAAED,IAAI,EAAEE,MAAR;IAAgBC;EAAhB,IAA8BR,uBAAuB,CACzDK,IAAI,CAACE,MAAL,CAAY,IAAZ,CADyD,CAA3D;EAGAE,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAPsB,CAQtB;EACA;EACA;;EAEA,IAAIC,SAAJ,EAAe;IACb,oBAAO;MAAU,SAAS,EAAC,qBAApB;MAA0C,GAAG,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,OACEH,IAAI,iBACF;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA,uBACE;QACE,GAAG,EAAEE,MAAM,CAAC,CAAD,CAAN,CAAU,aAAV,EAAyB,CAAzB,EAA4B,OAA5B,CADP;QAEE,KAAK,EAAC,OAFR;QAGE,MAAM,EAAC;MAHT;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA,UAAKA,MAAM,CAAC,CAAD,CAAN,CAAU,aAAV,EAAyB,CAAzB,EAA4B,MAA5B;IAAL;MAAA;MAAA;MAAA;IAAA,QARF,eASE;MAAO,SAAS,EAAC,qBAAjB;MAAA,wBACE;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAGE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAA,sBACGA,MAAM,CAAC,CAAD,CADT,6CACG,SAAWI,WAAX,CAAuBC,GAAvB,CAA4BC,MAAD,IAAY;UACtCJ,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACC,EAAnB;UACA,oBACE;YAAA,wBACE;cAAA,uBACE;gBAAK,GAAG,EAAED,MAAM,CAACE,KAAjB;gBAAwB,KAAK,EAAC,MAA9B;gBAAqC,MAAM,EAAC;cAA5C;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eAIE;cAAA,uBACE,QAAC,IAAD;gBACE,EAAE,EAAG,eAAcF,MAAM,CAACC,EAAG,EAD/B;gBAEE,KAAK,EAAE;kBAAET,IAAI,EAAE;oBAAEQ;kBAAF;gBAAR,CAFT;gBAAA,UAIGA,MAAM,CAACG;cAJV;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QAJF,eAYE;cAAA,UAAKH,MAAM,CAACI;YAAZ;cAAA;cAAA;cAAA;YAAA,QAZF,eAaE;cAAA,UAAKJ,MAAM,CAACK;YAAZ;cAAA;cAAA;cAAA;YAAA,QAbF;UAAA,GAASL,MAAM,CAACC,EAAhB;YAAA;YAAA;YAAA;UAAA,QADF;QAiBD,CAnBA;MADH;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AA+CD,CA/DD;;GAAMX,S;UACaF,W,EAGmBD,uB;;;KAJhCG,S;AAgEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}