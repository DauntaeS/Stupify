{"ast":null,"code":"var _jsxFileName = \"/app/src/GenreList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useGetAllGenreQuery } from \"./app/apiSlice\";\nimport { Link } from \"react-router-dom\";\nimport { MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBCardImage } from \"mdb-react-ui-kit\";\nimport \"./App.css\";\nimport { search, reset } from \"./app/searchSlice\";\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllGenreList() {\n  _s();\n\n  var _filteredData;\n\n  const {\n    data,\n    isLoading\n  } = useGetAllGenreQuery();\n  const dispatch = useDispatch();\n  const searchCriteria = useSelector(state => state.search.value); // useEffect(() =>{\n  //   // if (filteredData){\n  //   //   dispatch(reset())}\n  // }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  const filteredData = () => {\n    var _data$2;\n\n    if (searchCriteria) {\n      var _data$;\n\n      const temp = searchCriteria; // dispatch(reset());\n\n      return (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.genres.filter(genre => {\n        return genre.includes(temp);\n      } // genre.includes(temp))\n      );\n    }\n\n    return (_data$2 = data[0]) === null || _data$2 === void 0 ? void 0 : _data$2.genres;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: (_filteredData = filteredData()) === null || _filteredData === void 0 ? void 0 : _filteredData.map((genre, index) => /*#__PURE__*/_jsxDEV(MDBCol, {\n      sm: \"2\",\n      children: /*#__PURE__*/_jsxDEV(MDBCard, {\n        children: [/*#__PURE__*/_jsxDEV(MDBCardImage, {\n          src: \"https://i.seadn.io/gcs/files/7187742030eeb68b16f478c47aece4dd.gif\",\n          position: \"top\",\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBCardBody, {\n          children: /*#__PURE__*/_jsxDEV(MDBCardTitle, {\n            className: \"card-title\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"link-primary text-decoration-none\",\n              to: `/spotify/genres`,\n              state: {\n                data: {\n                  genre\n                }\n              },\n              children: genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllGenreList, \"dPUijWg+1SjFn0/f8H3hsGFuzdQ=\", false, function () {\n  return [useGetAllGenreQuery, useDispatch, useSelector];\n});\n\n_c = AllGenreList;\nexport default AllGenreList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllGenreList\");","map":{"version":3,"names":["useSelector","useDispatch","useGetAllGenreQuery","Link","MDBCol","MDBCard","MDBCardBody","MDBCardTitle","MDBCardImage","search","reset","React","useEffect","AllGenreList","data","isLoading","dispatch","searchCriteria","state","value","filteredData","temp","genres","filter","genre","includes","map","index"],"sources":["/app/src/GenreList.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { useGetAllGenreQuery } from \"./app/apiSlice\";\nimport { Link } from \"react-router-dom\";\nimport {\n  MDBCol,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardImage,\n} from \"mdb-react-ui-kit\";\nimport \"./App.css\";\nimport { search, reset } from \"./app/searchSlice\";\nimport React, { useEffect } from \"react\";\n\nfunction AllGenreList() {\n  const { data, isLoading } = useGetAllGenreQuery();\n  const dispatch = useDispatch();\n\n  const searchCriteria = useSelector((state) => state.search.value);\n\n  // useEffect(() =>{\n  //   // if (filteredData){\n  //   //   dispatch(reset())}\n  // }, []);\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n\n  const filteredData = () => {\n    if (searchCriteria) {\n      const temp = searchCriteria;\n      // dispatch(reset());\n      return data[0]?.genres.filter(\n        (genre) => {\n          return genre.includes(temp);\n        }\n        // genre.includes(temp))\n      );\n    }\n    return data[0]?.genres;\n  };\n\n  return (\n    <div className=\"card-container\">\n      {filteredData()?.map((genre, index) => (\n        <MDBCol sm=\"2\" key={index}>\n          <MDBCard>\n            <MDBCardImage\n              src=\"https://i.seadn.io/gcs/files/7187742030eeb68b16f478c47aece4dd.gif\"\n              position=\"top\"\n              alt=\"...\"\n            />\n            <MDBCardBody>\n              <MDBCardTitle className=\"card-title\">\n                <Link\n                  className=\"link-primary text-decoration-none\"\n                  to={`/spotify/genres`}\n                  state={{ data: { genre } }}\n                >\n                  {genre}\n                </Link>\n              </MDBCardTitle>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      ))}\n    </div>\n  );\n}\n\nexport default AllGenreList;\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,YALF,QAMO,kBANP;AAOA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EAAA;;EACtB,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAsBb,mBAAmB,EAA/C;EACA,MAAMc,QAAQ,GAAGf,WAAW,EAA5B;EAEA,MAAMgB,cAAc,GAAGjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACT,MAAN,CAAaU,KAAzB,CAAlC,CAJsB,CAMtB;EACA;EACA;EACA;;EAEA,IAAIJ,SAAJ,EAAe;IACb,oBAAO;MAAU,SAAS,EAAC,qBAApB;MAA0C,GAAG,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,MAAMK,YAAY,GAAG,MAAM;IAAA;;IACzB,IAAIH,cAAJ,EAAoB;MAAA;;MAClB,MAAMI,IAAI,GAAGJ,cAAb,CADkB,CAElB;;MACA,iBAAOH,IAAI,CAAC,CAAD,CAAX,2CAAO,OAASQ,MAAT,CAAgBC,MAAhB,CACJC,KAAD,IAAW;QACT,OAAOA,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAP;MACD,CAHI,CAIL;MAJK,CAAP;IAMD;;IACD,kBAAOP,IAAI,CAAC,CAAD,CAAX,4CAAO,QAASQ,MAAhB;EACD,CAZD;;EAcA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,2BACGF,YAAY,EADf,kDACG,cAAgBM,GAAhB,CAAoB,CAACF,KAAD,EAAQG,KAAR,kBACnB,QAAC,MAAD;MAAQ,EAAE,EAAC,GAAX;MAAA,uBACE,QAAC,OAAD;QAAA,wBACE,QAAC,YAAD;UACE,GAAG,EAAC,mEADN;UAEE,QAAQ,EAAC,KAFX;UAGE,GAAG,EAAC;QAHN;UAAA;UAAA;UAAA;QAAA,QADF,eAME,QAAC,WAAD;UAAA,uBACE,QAAC,YAAD;YAAc,SAAS,EAAC,YAAxB;YAAA,uBACE,QAAC,IAAD;cACE,SAAS,EAAC,mCADZ;cAEE,EAAE,EAAG,iBAFP;cAGE,KAAK,EAAE;gBAAEb,IAAI,EAAE;kBAAEU;gBAAF;cAAR,CAHT;cAAA,UAKGA;YALH;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,GAAoBG,KAApB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD;;GAvDQd,Y;UACqBX,mB,EACXD,W,EAEMD,W;;;KAJhBa,Y;AAyDT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}