{"ast":null,"code":"var _jsxFileName = \"/app/src/ArtistPage.js\",\n    _s = $RefreshSig$();\n\n// import { useSelector } from \"react-redux\";\n// import { useGetSpotifyArtistQuery } from \"./app/apiSlice\";\n// import DeletePlayListButton from \"./playlist_functions/PlayListFunctions\";\n// import { useLocation } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n// import AboutArtist from \"./AboutArtist\";\n// function ArtistPage() {\n//   const location = useLocation();\n//   const { data } = location.state;\n//   const sSpotify = useSelector((state) => state.search.value);\n//   console.log(\"!!!!!!!!!!!!!!\", location);\n//   const params = {\n//     search: sSpotify,\n//     type: \"artist,album,track\",\n//     limit: 5,\n//     offset: 0,\n//   };\n//   const {\n//     //   data: artistData,\n//     error,\n//     isLoading,\n//   } = useGetSpotifyArtistQuery(params);\n//   if (isLoading) {\n//     return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n//   }\n//   // return <>Loading...</>;\n//   return (\n//     data && (\n//       <div className=\"row mt-3\">\n//         <h1>{data.artist[\"name\"]}</h1>\n//         <table className=\"table table-striped\">\n//           <thead>\n//             <tr>\n//               <th>Albums</th>\n//               <th>id</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {data[0]?.artists.map((artist) => {\n//               return (\n//                 <tr key={artist.id}>\n//                   <td>{artist.name}</td>\n//                   <td>\n//                     <AboutArtist />\n//                   </td>\n//                 </tr>\n//               );\n//             })}\n//           </tbody>\n//         </table>\n//       </div>\n//     )\n//   );\n// }\n// export default ArtistPage;\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useGetSpotifyArtistQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ArtistPage() {\n  _s();\n\n  const location = useLocation();\n  const {\n    data\n  } = location.state;\n  console.log(data);\n  const {\n    data: artist,\n    isLoading\n  } = useGetSpotifyArtistQuery(data); //   console.log(data && data[0][2][\"albums_info\"]);\n  //   const bro = data && data[0][1][\"tracks_info\"];\n  //   console.log(\"?????????????????????????\", bro);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Name\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this); // data && (\n  //   <div className=\"row mt-3\">\n  //     <h1>{data[0][0][\"artists_info\"][0][\"name\"]}</h1>\n  //     <table className=\"table table-striped\">\n  //       <thead>\n  //         <tr>\n  //           <th>Album Image</th>\n  //           <th>Title</th>\n  //           <th>Year</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n  //         {data[0][2]?.albums_info.map((album) => {\n  //           console.log(album);\n  //           return (\n  //             <tr key={album.id}>\n  //               <td>\n  //                 <img src={album.image} width=\"90px\" height=\"90px\"></img>\n  //               </td>\n  //               <td>{album.name}</td>\n  //               <td>{album.release_date}</td>\n  //             </tr>\n  //           );\n  //         })}\n  //       </tbody>\n  //     </table>\n  //   </div>\n  // )\n}\n\n_s(ArtistPage, \"1TKrAa9i6Ykx4ehIS2gZ601z+S0=\", false, function () {\n  return [useLocation, useGetSpotifyArtistQuery];\n});\n\n_c = ArtistPage;\nexport default ArtistPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"names":["useDispatch","useSelector","useGetSpotifyArtistQuery","useLocation","ArtistPage","location","data","state","console","log","artist","isLoading"],"sources":["/app/src/ArtistPage.js"],"sourcesContent":["// import { useSelector } from \"react-redux\";\n// import { useGetSpotifyArtistQuery } from \"./app/apiSlice\";\n// import DeletePlayListButton from \"./playlist_functions/PlayListFunctions\";\n// import { useLocation } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n// import AboutArtist from \"./AboutArtist\";\n\n// function ArtistPage() {\n//   const location = useLocation();\n//   const { data } = location.state;\n//   const sSpotify = useSelector((state) => state.search.value);\n//   console.log(\"!!!!!!!!!!!!!!\", location);\n\n//   const params = {\n//     search: sSpotify,\n//     type: \"artist,album,track\",\n//     limit: 5,\n//     offset: 0,\n//   };\n\n//   const {\n//     //   data: artistData,\n//     error,\n//     isLoading,\n//   } = useGetSpotifyArtistQuery(params);\n\n//   if (isLoading) {\n//     return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n//   }\n//   // return <>Loading...</>;\n//   return (\n//     data && (\n//       <div className=\"row mt-3\">\n//         <h1>{data.artist[\"name\"]}</h1>\n//         <table className=\"table table-striped\">\n//           <thead>\n//             <tr>\n//               <th>Albums</th>\n//               <th>id</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {data[0]?.artists.map((artist) => {\n//               return (\n//                 <tr key={artist.id}>\n//                   <td>{artist.name}</td>\n//                   <td>\n//                     <AboutArtist />\n//                   </td>\n//                 </tr>\n//               );\n//             })}\n//           </tbody>\n//         </table>\n//       </div>\n//     )\n//   );\n// }\n\n// export default ArtistPage;\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useGetSpotifyArtistQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction ArtistPage() {\n  const location = useLocation();\n  const { data } = location.state;\n  console.log(data);\n  const { data: artist, isLoading } = useGetSpotifyArtistQuery(data);\n  //   console.log(data && data[0][2][\"albums_info\"]);\n  //   const bro = data && data[0][1][\"tracks_info\"];\n  //   console.log(\"?????????????????????????\", bro);\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n\n  return <h1>Name</h1>;\n  // data && (\n  //   <div className=\"row mt-3\">\n  //     <h1>{data[0][0][\"artists_info\"][0][\"name\"]}</h1>\n  //     <table className=\"table table-striped\">\n  //       <thead>\n  //         <tr>\n  //           <th>Album Image</th>\n  //           <th>Title</th>\n  //           <th>Year</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n  //         {data[0][2]?.albums_info.map((album) => {\n  //           console.log(album);\n  //           return (\n  //             <tr key={album.id}>\n  //               <td>\n  //                 <img src={album.image} width=\"90px\" height=\"90px\"></img>\n  //               </td>\n  //               <td>{album.name}</td>\n  //               <td>{album.release_date}</td>\n  //             </tr>\n  //           );\n  //         })}\n  //       </tbody>\n  //     </table>\n  //   </div>\n  // )\n}\nexport default ArtistPage;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,gBAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EACpB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EACA,MAAM;IAAEG;EAAF,IAAWD,QAAQ,CAACE,KAA1B;EACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACA,MAAM;IAAEA,IAAI,EAAEI,MAAR;IAAgBC;EAAhB,IAA8BT,wBAAwB,CAACI,IAAD,CAA5D,CAJoB,CAKpB;EACA;EACA;;EAEA,IAAIK,SAAJ,EAAe;IACb,oBAAO;MAAU,SAAS,EAAC,qBAApB;MAA0C,GAAG,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP,CAboB,CAcpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD;;GA1CQP,U;UACUD,W,EAGmBD,wB;;;KAJ7BE,U;AA2CT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}