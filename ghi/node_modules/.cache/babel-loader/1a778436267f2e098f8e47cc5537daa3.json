{"ast":null,"code":"var _jsxFileName = \"/app/src/ArtistPage.js\",\n    _s = $RefreshSig$();\n\nimport { useGetSpotifyArtistQuery } from \"./app/apiSlice\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ArtistPage() {\n  _s();\n\n  var _artist$;\n\n  const {\n    id\n  } = useParams();\n  const {\n    data: artist,\n    isLoading\n  } = useGetSpotifyArtistQuery(id);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  return artist && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: artist[0][\"artist_info\"][0][\"image\"],\n        width: \"200px\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: artist[0][\"artist_info\"][0][\"name\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Albums\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Release date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: (_artist$ = artist[0]) === null || _artist$ === void 0 ? void 0 : _artist$.albums_info.map(album => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/spotify/albums/${album.id}`,\n                state: {\n                  data: {\n                    album\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: album.image,\n                  width: \"90px\",\n                  height: \"90px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"link-primary text-decoration-none\",\n                to: `/spotify/albums/${album.id}`,\n                state: {\n                  data: {\n                    album\n                  }\n                },\n                children: album.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: album.total_tracks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: album.release_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)]\n          }, album.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ArtistPage, \"23v6SbSKc8eYjD08SCxTPH7u3wU=\", false, function () {\n  return [useParams, useGetSpotifyArtistQuery];\n});\n\n_c = ArtistPage;\nexport default ArtistPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"names":["useGetSpotifyArtistQuery","Link","useParams","ArtistPage","id","data","artist","isLoading","albums_info","map","album","image","name","total_tracks","release_date"],"sources":["/app/src/ArtistPage.js"],"sourcesContent":["import { useGetSpotifyArtistQuery } from \"./app/apiSlice\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nfunction ArtistPage() {\n  const { id } = useParams();\n\n  const { data: artist, isLoading } = useGetSpotifyArtistQuery(id);\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n\n  return (\n    artist && (\n      <div className=\"row mt-3\">\n        <h1>\n          <img\n            src={artist[0][\"artist_info\"][0][\"image\"]}\n            width=\"200px\"\n            height=\"200px\"\n          ></img>\n        </h1>\n        <h1>{artist[0][\"artist_info\"][0][\"name\"]}</h1>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Albums</th>\n              <th>Title</th>\n              <th>Total Tracks</th>\n              <th>Release date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {artist[0]?.albums_info.map((album) => {\n              return (\n                <tr key={album.id}>\n                  <td>\n                    <Link\n                      to={`/spotify/albums/${album.id}`}\n                      state={{ data: { album } }}\n                    >\n                      <img src={album.image} width=\"90px\" height=\"90px\"></img>\n                    </Link>\n                  </td>\n                  <td>\n                    <Link\n                      className=\"link-primary text-decoration-none\"\n                      to={`/spotify/albums/${album.id}`}\n                      state={{ data: { album } }}\n                    >\n                      {album.name}\n                    </Link>\n                  </td>\n                  <td>{album.total_tracks}</td>\n                  <td>{album.release_date}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  );\n}\nexport default ArtistPage;\n"],"mappings":";;;AAAA,SAASA,wBAAT,QAAyC,gBAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EAAA;;EACpB,MAAM;IAAEC;EAAF,IAASF,SAAS,EAAxB;EAEA,MAAM;IAAEG,IAAI,EAAEC,MAAR;IAAgBC;EAAhB,IAA8BP,wBAAwB,CAACI,EAAD,CAA5D;;EAEA,IAAIG,SAAJ,EAAe;IACb,oBAAO;MAAU,SAAS,EAAC,qBAApB;MAA0C,GAAG,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,OACED,MAAM,iBACJ;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA,uBACE;QACE,GAAG,EAAEA,MAAM,CAAC,CAAD,CAAN,CAAU,aAAV,EAAyB,CAAzB,EAA4B,OAA5B,CADP;QAEE,KAAK,EAAC,OAFR;QAGE,MAAM,EAAC;MAHT;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA,UAAKA,MAAM,CAAC,CAAD,CAAN,CAAU,aAAV,EAAyB,CAAzB,EAA4B,MAA5B;IAAL;MAAA;MAAA;MAAA;IAAA,QARF,eASE;MAAO,SAAS,EAAC,qBAAjB;MAAA,wBACE;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAA,sBACGA,MAAM,CAAC,CAAD,CADT,6CACG,SAAWE,WAAX,CAAuBC,GAAvB,CAA4BC,KAAD,IAAW;UACrC,oBACE;YAAA,wBACE;cAAA,uBACE,QAAC,IAAD;gBACE,EAAE,EAAG,mBAAkBA,KAAK,CAACN,EAAG,EADlC;gBAEE,KAAK,EAAE;kBAAEC,IAAI,EAAE;oBAAEK;kBAAF;gBAAR,CAFT;gBAAA,uBAIE;kBAAK,GAAG,EAAEA,KAAK,CAACC,KAAhB;kBAAuB,KAAK,EAAC,MAA7B;kBAAoC,MAAM,EAAC;gBAA3C;kBAAA;kBAAA;kBAAA;gBAAA;cAJF;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eASE;cAAA,uBACE,QAAC,IAAD;gBACE,SAAS,EAAC,mCADZ;gBAEE,EAAE,EAAG,mBAAkBD,KAAK,CAACN,EAAG,EAFlC;gBAGE,KAAK,EAAE;kBAAEC,IAAI,EAAE;oBAAEK;kBAAF;gBAAR,CAHT;gBAAA,UAKGA,KAAK,CAACE;cALT;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QATF,eAkBE;cAAA,UAAKF,KAAK,CAACG;YAAX;cAAA;cAAA;cAAA;YAAA,QAlBF,eAmBE;cAAA,UAAKH,KAAK,CAACI;YAAX;cAAA;cAAA;cAAA;YAAA,QAnBF;UAAA,GAASJ,KAAK,CAACN,EAAf;YAAA;YAAA;YAAA;UAAA,QADF;QAuBD,CAxBA;MADH;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAmDD;;GA5DQD,U;UACQD,S,EAEqBF,wB;;;KAH7BG,U;AA6DT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}