{"ast":null,"code":"var _jsxFileName = \"/app/src/AlbumInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useGetSpotifyAlbumQuery, useGetAllPlaylistQuery } from \"./app/apiSlice\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport CreateSongButton from \"./playlist_functions/CreateSong.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlbumInfo = () => {\n  _s();\n\n  var _albums$;\n\n  const {\n    id\n  } = useParams();\n  const {\n    data: playLists\n  } = useGetAllPlaylistQuery();\n  const {\n    data: albums,\n    isLoading\n  } = useGetSpotifyAlbumQuery(id);\n  const [selectedPlaylists, setSelectedPlaylists] = useState([]);\n\n  const handlePlaylistChange = (index, playlistId, playlistName) => {\n    const updatedPlaylists = [...selectedPlaylists];\n    updatedPlaylists[index] = {\n      id: playlistId,\n      name: playlistName\n    };\n    setSelectedPlaylists(updatedPlaylists);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return albums && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: albums[0][\"album_info\"][\"image\"],\n        width: \"200px\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: albums[0][\"album_info\"][\"name\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Playlists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: (_albums$ = albums[0]) === null || _albums$ === void 0 ? void 0 : _albums$.tracks.map((track, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: track.track_number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"link-primary text-decoration-none\",\n                to: `/spotify/tracks/${track.id}`,\n                children: track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [Math.floor(track.duration_ms / 60000), \":\", (track.duration_ms / 1000 % 60).toFixed().padStart(2, \"0\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    variant: \"secondary\",\n                    id: `dropdownMenuButton_${index}`,\n                    children: selectedPlaylists[index] ? selectedPlaylists[index].name : \"Select Playlist\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    children: playLists && (playLists === null || playLists === void 0 ? void 0 : playLists.playlists.map(playlist => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      onClick: () => handlePlaylistChange(index, playlist.id, playlist.name),\n                      children: playlist.name\n                    }, playlist.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 31\n                    }, this)))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(CreateSongButton, {\n                data: {\n                  playlist_id: selectedPlaylists[index] && selectedPlaylists[index].id,\n                  track_number: track[\"track_number\"],\n                  name: track[\"name\"],\n                  album: albums && albums[0][\"album_info\"][\"name\"],\n                  album_id: albums && albums[0][\"album_info\"][\"id\"],\n                  album_image: albums && albums[0][\"album_info\"][\"image\"],\n                  duration: track[\"duration_ms\"],\n                  spotify_id: track[\"id\"],\n                  artist: track[\"artist_name\"]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, track.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AlbumInfo, \"0iuUcSuJFSV16JDS6EOi+xUOM8k=\", false, function () {\n  return [useParams, useGetAllPlaylistQuery, useGetSpotifyAlbumQuery];\n});\n\n_c = AlbumInfo;\nexport default AlbumInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumInfo\");","map":{"version":3,"names":["useGetSpotifyAlbumQuery","useGetAllPlaylistQuery","Link","useParams","Dropdown","React","useState","CreateSongButton","AlbumInfo","id","data","playLists","albums","isLoading","selectedPlaylists","setSelectedPlaylists","handlePlaylistChange","index","playlistId","playlistName","updatedPlaylists","name","tracks","map","track","track_number","Math","floor","duration_ms","toFixed","padStart","playlists","playlist","playlist_id","album","album_id","album_image","duration","spotify_id","artist"],"sources":["/app/src/AlbumInfo.js"],"sourcesContent":["import {\n  useGetSpotifyAlbumQuery,\n  useGetAllPlaylistQuery,\n} from \"./app/apiSlice\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport React, { useState, } from \"react\";\nimport CreateSongButton from \"./playlist_functions/CreateSong.js\";\n\n\nconst AlbumInfo = () => {\n  const { id } = useParams();\n  const { data: playLists } = useGetAllPlaylistQuery();\n  const { data: albums, isLoading } = useGetSpotifyAlbumQuery(id);\n\n  const [selectedPlaylists, setSelectedPlaylists] = useState([]);\n\n  const handlePlaylistChange = (index, playlistId, playlistName) => {\n\n    const updatedPlaylists = [...selectedPlaylists];\n    updatedPlaylists[index] = { id: playlistId, name: playlistName };\n    setSelectedPlaylists(updatedPlaylists);\n  };\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n\n  return (\n    albums && (\n      <div className=\"row mt-3\">\n        <h1>\n          <img\n            src={albums[0][\"album_info\"][\"image\"]}\n            width=\"200px\"\n            height=\"200px\"\n          ></img>\n        </h1>\n        <h1>{albums[0][\"album_info\"][\"name\"]}</h1>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Length</th>\n              <th>Playlists</th>\n              <th>Add</th>\n            </tr>\n          </thead>\n          <tbody>\n            {albums[0]?.tracks.map((track, index) => {\n              return (\n                <tr key={track.id}>\n                  <td>{track.track_number}</td>\n                  <td>\n                    <Link\n                    className=\"link-primary text-decoration-none\"\n                      to={`/spotify/tracks/${track.id}`}\n                    >\n                      {track.name}\n                    </Link>\n                  </td>\n                  <td>\n                    {Math.floor(track.duration_ms / 60000)}:\n                    {((track.duration_ms / 1000) % 60)\n                      .toFixed()\n                      .padStart(2, \"0\")}\n                  </td>\n                  <td>\n                    <div className=\"dropdown\">\n                      <Dropdown>\n                        <Dropdown.Toggle\n                          variant=\"secondary\"\n                          id={`dropdownMenuButton_${index}`}\n                        >\n                          {selectedPlaylists[index]\n                            ? selectedPlaylists[index].name\n                            : \"Select Playlist\"}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                          {playLists &&\n                            playLists?.playlists.map((playlist) => (\n                              <Dropdown.Item\n                                key={playlist.id}\n                                onClick={() =>\n                                  handlePlaylistChange(\n                                    index,\n                                    playlist.id,\n                                    playlist.name\n                                  )\n                                }\n                              >\n                                {playlist.name}\n                              </Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </div>\n                  </td>\n                  <td>\n                    <CreateSongButton\n                      data={{\n                        playlist_id:\n                          selectedPlaylists[index] &&\n                          selectedPlaylists[index].id,\n                        track_number: track[\"track_number\"],\n                        name: track[\"name\"],\n                        album: albums && albums[0][\"album_info\"][\"name\"],\n                        album_id: albums && albums[0][\"album_info\"][\"id\"],\n                        album_image: albums && albums[0][\"album_info\"][\"image\"],\n                        duration: track[\"duration_ms\"],\n                        spotify_id: track[\"id\"],\n                        artist: track[\"artist_name\"],\n                      }}\n                    />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  );\n};\n\nexport default AlbumInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}