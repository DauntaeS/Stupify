{"ast":null,"code":"var _jsxFileName = \"/app/src/SongInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useGetSpotifyTrackQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongInfo = () => {\n  _s();\n\n  const location = useLocation();\n  const {\n    data\n  } = location.state;\n  let id;\n\n  if (data.track) {\n    id = data.track.id;\n  } else if (data.album) {\n    id = data.album.id;\n  }\n\n  const {\n    data: track,\n    isLoading\n  } = useGetSpotifyTrackQuery(id);\n  console.log(id);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"HEllo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this); // return (\n  //   data && (\n  //     <div className=\"row mt-3\">\n  //       <h1>\n  //         <img\n  //           src={track[0][\"album_info\"][\"image\"]}\n  //           width=\"200px\"\n  //           height=\"200px\"\n  //         ></img>\n  //       </h1>\n  //       <h1>\n  //         <Link\n  //           to={`/album-info/${track[0][\"album_info\"][\"id\"]}`}\n  //           state={{ data: { track } }}\n  //         >\n  //           {track[0][\"album_info\"][\"name\"]}\n  //         </Link>\n  //       </h1>\n  //       <table className=\"table table-striped\">\n  //         <thead>\n  //           <tr>\n  //             <th>#</th>\n  //             <th>Title</th>\n  //             <th>Artist</th>\n  //             <th>Length</th>\n  //           </tr>\n  //         </thead>\n  //         <tbody>\n  //           <tr>\n  //             <td>{track[0][\"track_info\"][\"track_number\"]}</td>\n  //             <td>{track[0][\"track_info\"][\"name\"]}</td>\n  //             <td>{track[0][\"track_info\"][\"artist_name\"][0][\"artist_name\"]}</td>\n  //             <td>{track[0][\"track_info\"][\"duration_ms\"]}</td>\n  //           </tr>\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   )\n  // );\n};\n\n_s(SongInfo, \"DZFSvVg6NAlF5JwX+XNkwx8quUI=\", false, function () {\n  return [useLocation, useGetSpotifyTrackQuery];\n});\n\n_c = SongInfo;\nexport default SongInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongInfo\");","map":{"version":3,"names":["useGetSpotifyTrackQuery","useLocation","Link","SongInfo","location","data","state","id","track","album","isLoading","console","log"],"sources":["/app/src/SongInfo.js"],"sourcesContent":["import { useGetSpotifyTrackQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst SongInfo = () => {\n  const location = useLocation();\n  const { data } = location.state;\n\n  let id;\n  if (data.track) {\n    id = data.track.id;\n  } else if (data.album) {\n    id = data.album.id;\n  }\n\n  const { data: track, isLoading } = useGetSpotifyTrackQuery(id);\n  console.log(id);\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n  return <h1>HEllo</h1>;\n  // return (\n  //   data && (\n  //     <div className=\"row mt-3\">\n  //       <h1>\n  //         <img\n  //           src={track[0][\"album_info\"][\"image\"]}\n  //           width=\"200px\"\n  //           height=\"200px\"\n  //         ></img>\n  //       </h1>\n  //       <h1>\n  //         <Link\n  //           to={`/album-info/${track[0][\"album_info\"][\"id\"]}`}\n  //           state={{ data: { track } }}\n  //         >\n  //           {track[0][\"album_info\"][\"name\"]}\n  //         </Link>\n  //       </h1>\n  //       <table className=\"table table-striped\">\n  //         <thead>\n  //           <tr>\n  //             <th>#</th>\n  //             <th>Title</th>\n  //             <th>Artist</th>\n  //             <th>Length</th>\n  //           </tr>\n  //         </thead>\n  //         <tbody>\n  //           <tr>\n  //             <td>{track[0][\"track_info\"][\"track_number\"]}</td>\n  //             <td>{track[0][\"track_info\"][\"name\"]}</td>\n  //             <td>{track[0][\"track_info\"][\"artist_name\"][0][\"artist_name\"]}</td>\n  //             <td>{track[0][\"track_info\"][\"duration_ms\"]}</td>\n  //           </tr>\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   )\n  // );\n};\nexport default SongInfo;\n"],"mappings":";;;AAAA,SAASA,uBAAT,QAAwC,gBAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAM;IAAEI;EAAF,IAAWD,QAAQ,CAACE,KAA1B;EAEA,IAAIC,EAAJ;;EACA,IAAIF,IAAI,CAACG,KAAT,EAAgB;IACdD,EAAE,GAAGF,IAAI,CAACG,KAAL,CAAWD,EAAhB;EACD,CAFD,MAEO,IAAIF,IAAI,CAACI,KAAT,EAAgB;IACrBF,EAAE,GAAGF,IAAI,CAACI,KAAL,CAAWF,EAAhB;EACD;;EAED,MAAM;IAAEF,IAAI,EAAEG,KAAR;IAAeE;EAAf,IAA6BV,uBAAuB,CAACO,EAAD,CAA1D;EACAI,OAAO,CAACC,GAAR,CAAYL,EAAZ;;EACA,IAAIG,SAAJ,EAAe;IACb,oBAAO;MAAU,SAAS,EAAC,qBAApB;MAA0C,GAAG,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP,CAhBqB,CAiBrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CAxDD;;GAAMP,Q;UACaF,W,EAUkBD,uB;;;KAX/BG,Q;AAyDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}