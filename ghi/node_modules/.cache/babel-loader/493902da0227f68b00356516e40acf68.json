{"ast":null,"code":"var _jsxFileName = \"/app/src/playlist_functions/UpdatePlayList.js\",\n    _s = $RefreshSig$();\n\nimport { useUpdatePlaylistMutation } from \"../app/apiSlice\";\nimport React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap'; // function UpdateButton(playlist_data) {\n//   const [playListId, setPlayListId] = useState(\"\")\n//   const {data: updatePlayList}  = useUpdatePlaylistMutation();\n//   const [showModal, setShowModal] = useState(false);\n//   const handleClose = () => setShowModal(false);\n//   const handleShow = () => setShowModal(true);\n//   const handleUpdate = () => {\n//      updatePlayList((document.getElementById(\"playlistname\").value));\n//     handleClose();\n//     }\n//     // useUpdatePlaylistMutation(document.getElementById(\"playlistname\").value) }\n//     console.log(playlist_data?.playlist_data[\"name\"]);\n//   return (\n//     <div>\n//       <Button variant=\"primary\" onClick={handleShow}>\n//         Update\n//       </Button>\n//       <Modal show={showModal} onHide={handleClose}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>{playlist_data?.playlist_data[\"name\"]}</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body><input onChange = { setPlayListId(e.value) } type=\"text\" id=\"playlistname\"/></Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleClose}>\n//             Close\n//           </Button>\n//           <Button variant=\"primary\" onClick={ handleUpdate }>\n//             Save changes\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n//   }\n// export default UpdateButton\n// function UpdateButton(playlist_data) {\n//   const bro = {\"playlist_id\" : playlist_data?.playlist_data[\"id\"],\n//                     \"body\": {\"name:(document.getElementById(\"playlistname\").value)}\n//                   };\n//   const [ updatePlayList]  = useUpdatePlaylistMutation(bro);\n//   const [showModal, setShowModal] = useState(false);\n//   const handleClose = () => setShowModal(false);\n//   const handleShow = () => setShowModal(true);\n// return (\n//     <div>\n//       <Button variant=\"primary\" onClick={handleShow}>\n//         Update\n//       </Button>\n//       <Modal show={showModal} onHide={handleClose}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>{playlist_data?.playlist_data[\"name\"]}</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body><input  type=\"text\" id=\"playlistname\" defaultValue={playlist_data?.playlist_data[\"name\"]}/></Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleClose}>\n//             Close\n//           </Button>\n//           <Button variant=\"primary\" onClick={() => updatePlayList(bro)}>\n//             Save changes\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// }\n// export default UpdateButton\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateButton(playlist_data) {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const [inputValue, setInputValue] = useState(playlist_data === null || playlist_data === void 0 ? void 0 : playlist_data.playlist_data[\"name\"]);\n  const [updatePlayList] = useUpdatePlaylistMutation();\n\n  const handleClose = () => setShowModal(false);\n\n  const handleShow = () => setShowModal(true);\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    setInputValue(e.target.value);\n  };\n\n  const handleSaveChanges = () => {\n    const data = {\n      // playlist_id: playlist_data?.playlist_data[\"id\"],\n      \"name\": inputValue\n    };\n    console.log(\"??????????????????????????\", data);\n    updatePlayList({\n      id: playlist_data === null || playlist_data === void 0 ? void 0 : playlist_data.playlist_data[\"id\"],\n      data\n    });\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Your new Playlist name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"playlistname\",\n          value: inputValue,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSaveChanges,\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateButton, \"zwh5xkY2p36Mj83h8V5/0mzuLHw=\", false, function () {\n  return [useUpdatePlaylistMutation];\n});\n\n_c = UpdateButton;\nexport default UpdateButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateButton\");","map":{"version":3,"names":["useUpdatePlaylistMutation","React","useState","Button","Modal","UpdateButton","playlist_data","showModal","setShowModal","inputValue","setInputValue","updatePlayList","handleClose","handleShow","handleInputChange","e","preventDefault","target","value","handleSaveChanges","data","console","log","id"],"sources":["/app/src/playlist_functions/UpdatePlayList.js"],"sourcesContent":["import { useUpdatePlaylistMutation } from \"../app/apiSlice\";\n\n\nimport React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\n\n// function UpdateButton(playlist_data) {\n//   const [playListId, setPlayListId] = useState(\"\")\n//   const {data: updatePlayList}  = useUpdatePlaylistMutation();\n//   const [showModal, setShowModal] = useState(false);\n\n//   const handleClose = () => setShowModal(false);\n//   const handleShow = () => setShowModal(true);\n//   const handleUpdate = () => {\n\n//      updatePlayList((document.getElementById(\"playlistname\").value));\n//     handleClose();\n//     }\n//     // useUpdatePlaylistMutation(document.getElementById(\"playlistname\").value) }\n//     console.log(playlist_data?.playlist_data[\"name\"]);\n\n\n\n\n\n//   return (\n\n//     <div>\n//       <Button variant=\"primary\" onClick={handleShow}>\n//         Update\n//       </Button>\n\n//       <Modal show={showModal} onHide={handleClose}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>{playlist_data?.playlist_data[\"name\"]}</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body><input onChange = { setPlayListId(e.value) } type=\"text\" id=\"playlistname\"/></Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleClose}>\n//             Close\n//           </Button>\n//           <Button variant=\"primary\" onClick={ handleUpdate }>\n//             Save changes\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n\n\n//   );\n//   }\n// export default UpdateButton\n\n\n\n// function UpdateButton(playlist_data) {\n\n//   const bro = {\"playlist_id\" : playlist_data?.playlist_data[\"id\"],\n//                     \"body\": {\"name:(document.getElementById(\"playlistname\").value)}\n//                   };\n\n//   const [ updatePlayList]  = useUpdatePlaylistMutation(bro);\n//   const [showModal, setShowModal] = useState(false);\n\n//   const handleClose = () => setShowModal(false);\n//   const handleShow = () => setShowModal(true);\n\n\n// return (\n\n//     <div>\n//       <Button variant=\"primary\" onClick={handleShow}>\n//         Update\n//       </Button>\n\n//       <Modal show={showModal} onHide={handleClose}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>{playlist_data?.playlist_data[\"name\"]}</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body><input  type=\"text\" id=\"playlistname\" defaultValue={playlist_data?.playlist_data[\"name\"]}/></Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleClose}>\n//             Close\n//           </Button>\n//           <Button variant=\"primary\" onClick={() => updatePlayList(bro)}>\n//             Save changes\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n\n\n//   );\n// }\n// export default UpdateButton\n\n\n\nfunction UpdateButton(playlist_data) {\n  const [showModal, setShowModal] = useState(false);\n  const [inputValue, setInputValue] = useState(playlist_data?.playlist_data[\"name\"]);\n  const [updatePlayList] = useUpdatePlaylistMutation();\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n    setInputValue(e.target.value);\n  };\n\n  const handleSaveChanges = () => {\n    const data = {\n      // playlist_id: playlist_data?.playlist_data[\"id\"],\n      \"name\": inputValue };\n    console.log(\"??????????????????????????\", data)\n    updatePlayList({id: playlist_data?.playlist_data[\"id\"], data});\n    handleClose();\n  };\n\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Edit\n      </Button>\n\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Your new Playlist name</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <input\n            type=\"text\"\n            id=\"playlistname\"\n            value={inputValue}\n            onChange={handleInputChange}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSaveChanges}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default UpdateButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}