{"ast":null,"code":"var _jsxFileName = \"/app/src/SearchTracks.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSearchSpotifyQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchTracks() {\n  _s();\n\n  var _data$0$;\n\n  const sSpotify = useSelector(state => state.search.value);\n  const params = {\n    search: sSpotify,\n    type: \"artist,album,track\",\n    limit: 4,\n    offset: 0\n  };\n  const {\n    data,\n    isLoading\n  } = useSearchSpotifyQuery(params);\n  const bro = data && data[0][1];\n  console.log(\"?????????????????????????\", bro);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  } // return (\n  //   data && (\n  //     <div className=\"row mt-3\">\n  //       <h1>Related Tracks</h1>\n  //       <table className=\"table table-striped\">\n  //         <thead>\n  //           <tr>\n  //             <th>Image</th>\n  //             <th>Name</th>\n  //             <th>Artist</th>\n  //             <th>Length</th>\n  //           </tr>\n  //         </thead>\n  //         <tbody>\n  //           {data[0][1]?.tracks_info.map((track) => {\n  //             const artistNames = track.artist_name\n  //               .map((artist) => artist.artists_name)\n  //               .join(\", \");\n  //             return (\n  //               <tr key={track.id}>\n  //                 <td>\n  //                   <img\n  //                     src={track.album_image}\n  //                     width=\"90px\"\n  //                     height=\"90px\"\n  //                   ></img>\n  //                 </td>\n  //                 <td>\n  //                   <Link\n  //                     to={`/track-info/${track.id}`}\n  //                     state={{ data: { track } }}\n  //                   >\n  //                     {track.name}\n  //                   </Link>\n  //                 </td>\n  //                 <td>{artistNames}</td>\n  //                 <td>{track.duration_ms}</td>\n  //               </tr>\n  //             );\n  //           })}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   )\n  // );\n\n\n  return data && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Related Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: (_data$0$ = data[0][1]) === null || _data$0$ === void 0 ? void 0 : _data$0$.tracks_info.map(track => {\n          console.log(track);\n          const artistLinks = track.artist_name.map(artist => /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link-primary text-decoration-none\",\n            to: `/artist/${track[\"artist_name\"][0][\"id\"]}`,\n            state: {\n              data: {\n                artist\n              }\n            },\n            children: [artist.artists_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, artist.artist_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this));\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"link-primary text-decoration-none\",\n                to: `/track-info/${track.id}`,\n                state: {\n                  data: {\n                    track\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: track.album_image,\n                  width: \"90px\",\n                  height: \"90px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"link-primary text-decoration-none\",\n                to: `/track-info/${track.id}`,\n                state: {\n                  data: {\n                    track\n                  }\n                },\n                children: track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: artistLinks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: track.duration_ms\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, track.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SearchTracks, \"jzyTvnhShfccLWC4buFbnMtp7/g=\", false, function () {\n  return [useSelector, useSearchSpotifyQuery];\n});\n\n_c = SearchTracks;\nexport default SearchTracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchTracks\");","map":{"version":3,"names":["useDispatch","useSelector","useSearchSpotifyQuery","useLocation","Link","SearchTracks","sSpotify","state","search","value","params","type","limit","offset","data","isLoading","bro","console","log","tracks_info","map","track","artistLinks","artist_name","artist","artists_name","artist_id","id","album_image","name","duration_ms"],"sources":["/app/src/SearchTracks.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useSearchSpotifyQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction SearchTracks() {\n  const sSpotify = useSelector((state) => state.search.value);\n\n  const params = {\n    search: sSpotify,\n    type: \"artist,album,track\",\n    limit: 4,\n    offset: 0,\n  };\n  const { data, isLoading } = useSearchSpotifyQuery(params);\n\n  const bro = data && data[0][1];\n  console.log(\"?????????????????????????\", bro);\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n\n  // return (\n  //   data && (\n  //     <div className=\"row mt-3\">\n  //       <h1>Related Tracks</h1>\n  //       <table className=\"table table-striped\">\n  //         <thead>\n  //           <tr>\n  //             <th>Image</th>\n  //             <th>Name</th>\n  //             <th>Artist</th>\n  //             <th>Length</th>\n  //           </tr>\n  //         </thead>\n  //         <tbody>\n  //           {data[0][1]?.tracks_info.map((track) => {\n  //             const artistNames = track.artist_name\n  //               .map((artist) => artist.artists_name)\n  //               .join(\", \");\n  //             return (\n  //               <tr key={track.id}>\n  //                 <td>\n  //                   <img\n  //                     src={track.album_image}\n  //                     width=\"90px\"\n  //                     height=\"90px\"\n  //                   ></img>\n  //                 </td>\n  //                 <td>\n  //                   <Link\n  //                     to={`/track-info/${track.id}`}\n  //                     state={{ data: { track } }}\n  //                   >\n  //                     {track.name}\n  //                   </Link>\n  //                 </td>\n  //                 <td>{artistNames}</td>\n  //                 <td>{track.duration_ms}</td>\n  //               </tr>\n  //             );\n  //           })}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   )\n  // );\n\n  return (\n    data && (\n      <div className=\"row mt-3\">\n        <h1>Related Tracks</h1>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Name</th>\n              <th>Artist</th>\n              <th>Length</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data[0][1]?.tracks_info.map((track) => {\n              console.log(track);\n              const artistLinks = track.artist_name.map((artist) => (\n                <Link\n                  className=\"link-primary text-decoration-none\"\n                  key={artist.artist_id}\n                  to={`/artist/${track[\"artist_name\"][0][\"id\"]}`}\n                  state={{ data: { artist } }}\n                >\n                  {artist.artists_name}\n                  <br />\n                </Link>\n              ));\n\n              return (\n                <tr key={track.id}>\n                  <td>\n                    <Link\n                      className=\"link-primary text-decoration-none\"\n                      to={`/track-info/${track.id}`}\n                      state={{ data: { track } }}\n                    >\n                      <img\n                        src={track.album_image}\n                        width=\"90px\"\n                        height=\"90px\"\n                      ></img>\n                    </Link>\n                  </td>\n                  <td>\n                    <Link\n                      className=\"link-primary text-decoration-none\"\n                      to={`/track-info/${track.id}`}\n                      state={{ data: { track } }}\n                    >\n                      {track.name}\n                    </Link>\n                  </td>\n                  <td>{artistLinks}</td>\n                  <td>{track.duration_ms}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  );\n}\nexport default SearchTracks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}