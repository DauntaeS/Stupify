{"ast":null,"code":"var _jsxFileName = \"/app/src/ArtistPage.js\",\n    _s = $RefreshSig$();\n\n// import { useSelector } from \"react-redux\";\n// import { useGetSpotifyArtistQuery } from \"./app/apiSlice\";\n// import DeletePlayListButton from \"./playlist_functions/PlayListFunctions\";\n// import { useLocation } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n// import AboutArtist from \"./AboutArtist\";\n// function ArtistPage() {\n//   const location = useLocation();\n//   const { data } = location.state;\n//   const sSpotify = useSelector((state) => state.search.value);\n//   console.log(\"!!!!!!!!!!!!!!\", location);\n//   const params = {\n//     search: sSpotify,\n//     type: \"artist,album,track\",\n//     limit: 5,\n//     offset: 0,\n//   };\n//   const {\n//     //   data: artistData,\n//     error,\n//     isLoading,\n//   } = useGetSpotifyArtistQuery(params);\n//   if (isLoading) {\n//     return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n//   }\n//   // return <>Loading...</>;\n//   return (\n//     data && (\n//       <div className=\"row mt-3\">\n//         <h1>{data.artist[\"name\"]}</h1>\n//         <table className=\"table table-striped\">\n//           <thead>\n//             <tr>\n//               <th>Albums</th>\n//               <th>id</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {data[0]?.artists.map((artist) => {\n//               return (\n//                 <tr key={artist.id}>\n//                   <td>{artist.name}</td>\n//                   <td>\n//                     <AboutArtist />\n//                   </td>\n//                 </tr>\n//               );\n//             })}\n//           </tbody>\n//         </table>\n//       </div>\n//     )\n//   );\n// }\n// export default ArtistPage;\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useGetSpotifyArtistQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ArtistPage() {\n  _s();\n\n  const location = useLocation();\n  const {\n    data\n  } = location.state;\n  console.log(data);\n  const {\n    data: artist,\n    isLoading\n  } = useGetSpotifyArtistQuery(data.artist[\"id\"]); //   console.log(artist[0]);\n  //   console.log(data && data[0][2][\"albums_info\"]);\n  //   const bro = data && data[0][1][\"tracks_info\"];\n  //   console.log(\"?????????????????????????\", bro);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n\n  return data && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: artist[0][\"artist_info\"][0][\"name\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Album Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: artist === null || artist === void 0 ? void 0 : artist.artist_info.map(artist => {\n          console.log(artist);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: artist.image,\n                width: \"90px\",\n                height: \"90px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, artist.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ArtistPage, \"1TKrAa9i6Ykx4ehIS2gZ601z+S0=\", false, function () {\n  return [useLocation, useGetSpotifyArtistQuery];\n});\n\n_c = ArtistPage;\nexport default ArtistPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"names":["useDispatch","useSelector","useGetSpotifyArtistQuery","useLocation","ArtistPage","location","data","state","console","log","artist","isLoading","artist_info","map","image","name","id"],"sources":["/app/src/ArtistPage.js"],"sourcesContent":["// import { useSelector } from \"react-redux\";\n// import { useGetSpotifyArtistQuery } from \"./app/apiSlice\";\n// import DeletePlayListButton from \"./playlist_functions/PlayListFunctions\";\n// import { useLocation } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n// import AboutArtist from \"./AboutArtist\";\n\n// function ArtistPage() {\n//   const location = useLocation();\n//   const { data } = location.state;\n//   const sSpotify = useSelector((state) => state.search.value);\n//   console.log(\"!!!!!!!!!!!!!!\", location);\n\n//   const params = {\n//     search: sSpotify,\n//     type: \"artist,album,track\",\n//     limit: 5,\n//     offset: 0,\n//   };\n\n//   const {\n//     //   data: artistData,\n//     error,\n//     isLoading,\n//   } = useGetSpotifyArtistQuery(params);\n\n//   if (isLoading) {\n//     return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n//   }\n//   // return <>Loading...</>;\n//   return (\n//     data && (\n//       <div className=\"row mt-3\">\n//         <h1>{data.artist[\"name\"]}</h1>\n//         <table className=\"table table-striped\">\n//           <thead>\n//             <tr>\n//               <th>Albums</th>\n//               <th>id</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {data[0]?.artists.map((artist) => {\n//               return (\n//                 <tr key={artist.id}>\n//                   <td>{artist.name}</td>\n//                   <td>\n//                     <AboutArtist />\n//                   </td>\n//                 </tr>\n//               );\n//             })}\n//           </tbody>\n//         </table>\n//       </div>\n//     )\n//   );\n// }\n\n// export default ArtistPage;\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useGetSpotifyArtistQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction ArtistPage() {\n  const location = useLocation();\n  const { data } = location.state;\n  console.log(data);\n  const { data: artist, isLoading } = useGetSpotifyArtistQuery(\n    data.artist[\"id\"]\n  );\n  //   console.log(artist[0]);\n  //   console.log(data && data[0][2][\"albums_info\"]);\n  //   const bro = data && data[0][1][\"tracks_info\"];\n  //   console.log(\"?????????????????????????\", bro);\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n\n  return (\n    data && (\n      <div className=\"row mt-3\">\n        <h1>{artist[0][\"artist_info\"][0][\"name\"]}</h1>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Album Image</th>\n              <th>Title</th>\n              <th>Year</th>\n            </tr>\n          </thead>\n          <tbody>\n            {artist?.artist_info.map((artist) => {\n              console.log(artist);\n              return (\n                <tr key={artist.id}>\n                  <td>\n                    <img src={artist.image} width=\"90px\" height=\"90px\"></img>\n                  </td>\n                  <td>{artist.name}</td>\n                  <td>{artist.name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  );\n}\nexport default ArtistPage;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,gBAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EACpB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EACA,MAAM;IAAEG;EAAF,IAAWD,QAAQ,CAACE,KAA1B;EACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACA,MAAM;IAAEA,IAAI,EAAEI,MAAR;IAAgBC;EAAhB,IAA8BT,wBAAwB,CAC1DI,IAAI,CAACI,MAAL,CAAY,IAAZ,CAD0D,CAA5D,CAJoB,CAOpB;EACA;EACA;EACA;;EAEA,IAAIC,SAAJ,EAAe;IACb,oBAAO;MAAU,SAAS,EAAC,qBAApB;MAA0C,GAAG,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,OACEL,IAAI,iBACF;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA,UAAKI,MAAM,CAAC,CAAD,CAAN,CAAU,aAAV,EAAyB,CAAzB,EAA4B,MAA5B;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,SAAS,EAAC,qBAAjB;MAAA,wBACE;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAA,UACGA,MADH,aACGA,MADH,uBACGA,MAAM,CAAEE,WAAR,CAAoBC,GAApB,CAAyBH,MAAD,IAAY;UACnCF,OAAO,CAACC,GAAR,CAAYC,MAAZ;UACA,oBACE;YAAA,wBACE;cAAA,uBACE;gBAAK,GAAG,EAAEA,MAAM,CAACI,KAAjB;gBAAwB,KAAK,EAAC,MAA9B;gBAAqC,MAAM,EAAC;cAA5C;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eAIE;cAAA,UAAKJ,MAAM,CAACK;YAAZ;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE;cAAA,UAAKL,MAAM,CAACK;YAAZ;cAAA;cAAA;cAAA;YAAA,QALF;UAAA,GAASL,MAAM,CAACM,EAAhB;YAAA;YAAA;YAAA;UAAA,QADF;QASD,CAXA;MADH;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AA8BD;;GA9CQZ,U;UACUD,W,EAGmBD,wB;;;KAJ7BE,U;AA+CT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}