{"ast":null,"code":"var _jsxFileName = \"/app/src/PlayListPage.js\",\n    _s = $RefreshSig$();\n\nimport { useGetAllSongsInPlaylistQuery } from \"./app/apiSlice\";\nimport DeleteSongButton from \"./playlist_functions/DeleteSong.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpecificPlayList() {\n  _s();\n\n  const location = useLocation();\n  const {\n    data\n  } = location.state;\n  const {\n    data: playlistData,\n    error,\n    isLoading\n  } = useGetAllSongsInPlaylistQuery(data.playlist[\"id\"]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.playlist[\"name\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: playlistData === null || playlistData === void 0 ? void 0 : playlistData.songs.map((song, index) => {\n          const artistLinks = song.artist.map(artist => /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link-primary text-decoration-none\",\n            to: `/spotify/artists/${artist.id}`,\n            children: [artist.artist_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, artist.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this));\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"link-primary text-decoration-none\",\n                to: `/spotify/tracks/${song.spotify_id}`,\n                children: song.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: artistLinks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"link-primary text-decoration-none\",\n                to: `/spotify/albums/${song.album_id}`,\n                children: song.album\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [Math.floor(song.duration / 60000), \":\", (song.duration / 1000 % 60).toFixed().padStart(2, \"0\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(DeleteSongButton, {\n                sId: song.id,\n                pId: data.playlist[\"id\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, song.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SpecificPlayList, \"+7BshU2shWY1aTYMqVN0g+lSHvg=\", false, function () {\n  return [useLocation, useGetAllSongsInPlaylistQuery];\n});\n\n_c = SpecificPlayList;\nexport default SpecificPlayList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpecificPlayList\");","map":{"version":3,"names":["useGetAllSongsInPlaylistQuery","DeleteSongButton","useLocation","Link","SpecificPlayList","location","data","state","playlistData","error","isLoading","playlist","songs","map","song","index","artistLinks","artist","id","artist_name","spotify_id","name","album_id","album","Math","floor","duration","toFixed","padStart"],"sources":["/app/src/PlayListPage.js"],"sourcesContent":["import { useGetAllSongsInPlaylistQuery } from \"./app/apiSlice\";\nimport DeleteSongButton from \"./playlist_functions/DeleteSong.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction SpecificPlayList() {\n  const location = useLocation();\n  const { data } = location.state;\n\n  const {\n    data: playlistData,\n    error,\n    isLoading,\n  } = useGetAllSongsInPlaylistQuery(data.playlist[\"id\"]);\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n\n  return (\n    <div className=\"row mt-3\">\n      <h1>{data.playlist[\"name\"]}</h1>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Title</th>\n            <th>Artist</th>\n            <th>Album</th>\n            <th>Duration</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {playlistData?.songs.map((song, index) => {\n            const artistLinks = song.artist.map((artist) => (\n              <Link\n                className=\"link-primary text-decoration-none\"\n                key={artist.id}\n                to={`/spotify/artists/${artist.id}`}\n              >\n                {artist.artist_name}\n                <br />\n              </Link>\n            ));\n            return (\n              <tr key={song.id}>\n                <td>{index + 1}</td>\n                <td>\n                  <Link\n                    className=\"link-primary text-decoration-none\"\n                    to={`/spotify/tracks/${song.spotify_id}`}\n                  >\n                    {song.name}\n                  </Link>\n                </td>\n                <td>{artistLinks}</td>\n                <td>\n                  <Link\n                    className=\"link-primary text-decoration-none\"\n                    to={`/spotify/albums/${song.album_id}`}\n                  >\n                    {song.album}\n                  </Link>\n                </td>\n                <td>\n                  {Math.floor(song.duration / 60000)}:\n                  {((song.duration / 1000) % 60).toFixed().padStart(2, \"0\")}\n                </td>\n                <td>\n                  <DeleteSongButton sId={song.id} pId={data.playlist[\"id\"]} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default SpecificPlayList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}