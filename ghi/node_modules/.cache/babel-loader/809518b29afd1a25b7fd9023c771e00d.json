{"ast":null,"code":"var _jsxFileName = \"/app/src/AlbumInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useGetSpotifyAlbumQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlbumInfo = () => {\n  _s();\n\n  const location = useLocation();\n  const {\n    data\n  } = location.state;\n  const {\n    data: album,\n    isLoading\n  } = useGetSpotifyAlbumQuery(data.albums[\"id\"]);\n  console.log(album[0]); //   console.log(data && data[0][2][\"albums_info\"]);\n  //   const bro = data && data[0][1][\"tracks_info\"];\n  //   console.log(\"?????????????????????????\", bro);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this); // return (\n  //   data && (\n  //     <div className=\"row mt-3\">\n  //       <h1>\n  //         <img\n  //           src={artist[0][\"artist_info\"][0][\"image\"]}\n  //           width=\"200px\"\n  //           height=\"200px\"\n  //         ></img>\n  //       </h1>\n  //       <h1>{artist[0][\"artist_info\"][0][\"name\"]}</h1>\n  //       <table className=\"table table-striped\">\n  //         <thead>\n  //           <tr>\n  //             <th>Albums</th>\n  //             {/* <th>Songs</th> */}\n  //             <th>Title</th>\n  //             <th>Total Tracks</th>\n  //             <th>Release date</th>\n  //           </tr>\n  //         </thead>\n  //         <tbody>\n  //           {artist[0]?.albums_info.map((albums) => {\n  //             console.log(albums.id);\n  //             return (\n  //               <tr key={albums.id}>\n  //                 <td>\n  //                   <img src={albums.image} width=\"90px\" height=\"90px\"></img>\n  //                 </td>\n  //                 <td>\n  //                   <Link\n  //                     to={`/album-info/${albums.id}`}\n  //                     state={{ data: { albums } }}\n  //                   >\n  //                     {albums.name}\n  //                   </Link>\n  //                 </td>\n  //                 <td>{albums.total_tracks}</td>\n  //                 <td>{albums.release_date}</td>\n  //               </tr>\n  //             );\n  //           })}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   )\n  // );\n};\n\n_s(AlbumInfo, \"1OFPGZd0wkkXekAzySEJYAPz8Q8=\", false, function () {\n  return [useLocation, useGetSpotifyAlbumQuery];\n});\n\n_c = AlbumInfo;\nexport default AlbumInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumInfo\");","map":{"version":3,"names":["useGetSpotifyAlbumQuery","useLocation","AlbumInfo","location","data","state","album","isLoading","albums","console","log"],"sources":["/app/src/AlbumInfo.js"],"sourcesContent":["import { useGetSpotifyAlbumQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\n\nconst AlbumInfo = () => {\n  const location = useLocation();\n  const { data } = location.state;\n\n  const { data: album, isLoading } = useGetSpotifyAlbumQuery(data.albums[\"id\"]);\n  console.log(album[0]);\n  //   console.log(data && data[0][2][\"albums_info\"]);\n  //   const bro = data && data[0][1][\"tracks_info\"];\n  //   console.log(\"?????????????????????????\", bro);\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n  return <h1>Hello</h1>;\n  // return (\n  //   data && (\n  //     <div className=\"row mt-3\">\n  //       <h1>\n  //         <img\n  //           src={artist[0][\"artist_info\"][0][\"image\"]}\n  //           width=\"200px\"\n  //           height=\"200px\"\n  //         ></img>\n  //       </h1>\n  //       <h1>{artist[0][\"artist_info\"][0][\"name\"]}</h1>\n  //       <table className=\"table table-striped\">\n  //         <thead>\n  //           <tr>\n  //             <th>Albums</th>\n  //             {/* <th>Songs</th> */}\n  //             <th>Title</th>\n  //             <th>Total Tracks</th>\n  //             <th>Release date</th>\n  //           </tr>\n  //         </thead>\n  //         <tbody>\n  //           {artist[0]?.albums_info.map((albums) => {\n  //             console.log(albums.id);\n  //             return (\n  //               <tr key={albums.id}>\n  //                 <td>\n  //                   <img src={albums.image} width=\"90px\" height=\"90px\"></img>\n  //                 </td>\n  //                 <td>\n  //                   <Link\n  //                     to={`/album-info/${albums.id}`}\n  //                     state={{ data: { albums } }}\n  //                   >\n  //                     {albums.name}\n  //                   </Link>\n  //                 </td>\n  //                 <td>{albums.total_tracks}</td>\n  //                 <td>{albums.release_date}</td>\n  //               </tr>\n  //             );\n  //           })}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   )\n  // );\n};\nexport default AlbumInfo;\n"],"mappings":";;;AAAA,SAASA,uBAAT,QAAwC,gBAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EACA,MAAM;IAAEG;EAAF,IAAWD,QAAQ,CAACE,KAA1B;EAEA,MAAM;IAAED,IAAI,EAAEE,KAAR;IAAeC;EAAf,IAA6BP,uBAAuB,CAACI,IAAI,CAACI,MAAL,CAAY,IAAZ,CAAD,CAA1D;EACAC,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAAC,CAAD,CAAjB,EALsB,CAMtB;EACA;EACA;;EAEA,IAAIC,SAAJ,EAAe;IACb,oBAAO;MAAU,SAAS,EAAC,qBAApB;MAA0C,GAAG,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP,CAbsB,CActB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CA7DD;;GAAML,S;UACaD,W,EAGkBD,uB;;;KAJ/BE,S;AA8DN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}