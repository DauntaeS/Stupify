{"ast":null,"code":"var _jsxFileName = \"/app/src/SearchAlbums.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSearchSpotifyQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchAlbums() {\n  _s();\n\n  const sSpotify = useSelector(state => state.search.value);\n  const params = {\n    search: sSpotify,\n    type: \"artist,album,track\",\n    limit: 4,\n    offset: 0\n  };\n  const {\n    data,\n    isLoading\n  } = useSearchSpotifyQuery(params);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"HI\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this); // return (\n  //   data && (\n  //     <div className=\"row mt-3\">\n  //       <h1>Related Albums</h1>\n  //       <table className=\"table table-striped\">\n  //         <thead>\n  //           <tr>\n  //             <th>Album</th>\n  //             <th>Name</th>\n  //             <th>Release Date</th>\n  //             <th>Total Tracks</th>\n  //           </tr>\n  //         </thead>\n  //         <tbody>\n  //           {data[0][2]?.albums_info.map((album) => {\n  //             return (\n  //               <tr key={album.id}>\n  //                 <td>\n  //                   <img src={album.image} width=\"90px\" height=\"90px\"></img>\n  //                 </td>\n  //                 <td>\n  //                   <Link\n  //                     to={`/album-info/${album.id}`}\n  //                     state={{ data: { album } }}\n  //                   >\n  //                     {album.name}\n  //                   </Link>\n  //                 </td>\n  //                 <td>{album.release_date}</td>\n  //                 <td>{album.total_tracks}</td>\n  //               </tr>\n  //             );\n  //           })}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   )\n  // );\n}\n\n_s(SearchAlbums, \"jzyTvnhShfccLWC4buFbnMtp7/g=\", false, function () {\n  return [useSelector, useSearchSpotifyQuery];\n});\n\n_c = SearchAlbums;\nexport default SearchAlbums;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAlbums\");","map":{"version":3,"names":["useDispatch","useSelector","useSearchSpotifyQuery","useLocation","Link","SearchAlbums","sSpotify","state","search","value","params","type","limit","offset","data","isLoading"],"sources":["/app/src/SearchAlbums.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useSearchSpotifyQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction SearchAlbums() {\n  const sSpotify = useSelector((state) => state.search.value);\n\n  const params = {\n    search: sSpotify,\n    type: \"artist,album,track\",\n    limit: 4,\n    offset: 0,\n  };\n  const { data, isLoading } = useSearchSpotifyQuery(params);\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n  return <h1>HI</h1>;\n\n  // return (\n  //   data && (\n  //     <div className=\"row mt-3\">\n  //       <h1>Related Albums</h1>\n  //       <table className=\"table table-striped\">\n  //         <thead>\n  //           <tr>\n  //             <th>Album</th>\n  //             <th>Name</th>\n  //             <th>Release Date</th>\n  //             <th>Total Tracks</th>\n  //           </tr>\n  //         </thead>\n  //         <tbody>\n  //           {data[0][2]?.albums_info.map((album) => {\n  //             return (\n  //               <tr key={album.id}>\n  //                 <td>\n  //                   <img src={album.image} width=\"90px\" height=\"90px\"></img>\n  //                 </td>\n  //                 <td>\n  //                   <Link\n  //                     to={`/album-info/${album.id}`}\n  //                     state={{ data: { album } }}\n  //                   >\n  //                     {album.name}\n  //                   </Link>\n  //                 </td>\n  //                 <td>{album.release_date}</td>\n  //                 <td>{album.total_tracks}</td>\n  //               </tr>\n  //             );\n  //           })}\n  //         </tbody>\n  //       </table>\n  //     </div>\n  //   )\n  // );\n}\nexport default SearchAlbums;\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAA5B;EAEA,MAAMC,MAAM,GAAG;IACbF,MAAM,EAAEF,QADK;IAEbK,IAAI,EAAE,oBAFO;IAGbC,KAAK,EAAE,CAHM;IAIbC,MAAM,EAAE;EAJK,CAAf;EAMA,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAsBb,qBAAqB,CAACQ,MAAD,CAAjD;;EAEA,IAAIK,SAAJ,EAAe;IACb,oBAAO;MAAU,SAAS,EAAC,qBAApB;MAA0C,GAAG,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP,CAdsB,CAgBtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD;;GAtDQV,Y;UACUJ,W,EAQWC,qB;;;KATrBG,Y;AAuDT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}