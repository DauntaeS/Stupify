{"ast":null,"code":"var _jsxFileName = \"/app/src/SongInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useGetSpotifyTrackQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongInfo = () => {\n  _s();\n\n  const location = useLocation();\n  const {\n    data\n  } = location.state;\n  const {\n    data: track,\n    isLoading\n  } = useGetSpotifyTrackQuery(data.track[\"id\"]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress is-primary\",\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(track[0][\"track_info\"][\"track_number\"]);\n  return data && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: track[0][\"album_info\"][\"image\"],\n        width: \"200px\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: track[0][\"track_info\"][\"name\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Length\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: track[0][\"track_info\"][\"track_number\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: track[0][\"album_info\"][\"name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: track[0][\"track_info\"][\"artist_name\"][0][\"artist_name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: track[0][\"track_info\"][\"duration_ms\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SongInfo, \"DZFSvVg6NAlF5JwX+XNkwx8quUI=\", false, function () {\n  return [useLocation, useGetSpotifyTrackQuery];\n});\n\n_c = SongInfo;\nexport default SongInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongInfo\");","map":{"version":3,"names":["useGetSpotifyTrackQuery","useLocation","SongInfo","location","data","state","track","isLoading","console","log"],"sources":["/app/src/SongInfo.js"],"sourcesContent":["import { useGetSpotifyTrackQuery } from \"./app/apiSlice\";\nimport { useLocation } from \"react-router-dom\";\n\nconst SongInfo = () => {\n  const location = useLocation();\n  const { data } = location.state;\n\n  const { data: track, isLoading } = useGetSpotifyTrackQuery(data.track[\"id\"]);\n\n  if (isLoading) {\n    return <progress className=\"progress is-primary\" max=\"100\"></progress>;\n  }\n  console.log(track[0][\"track_info\"][\"track_number\"]);\n  return (\n    data && (\n      <div className=\"row mt-3\">\n        <h1>\n          <img\n            src={track[0][\"album_info\"][\"image\"]}\n            width=\"200px\"\n            height=\"200px\"\n          ></img>\n        </h1>\n        <h1>{track[0][\"track_info\"][\"name\"]}</h1>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Album</th>\n              <th>Artist</th>\n              <th>Length</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{track[0][\"track_info\"][\"track_number\"]}</td>\n              <td>{track[0][\"album_info\"][\"name\"]}</td>\n              <td>{track[0][\"track_info\"][\"artist_name\"][0][\"artist_name\"]}</td>\n              <td>{track[0][\"track_info\"][\"duration_ms\"]}</td>\n            </tr>\n            {/* {track[0][\"track_info\"]?.map((tracks) => {\n              console.log(tracks);\n              return (\n                <tr key={tracks.track_info.id}>\n                  <td>{tracks.track_info.artist_name}</td>\n                </tr>\n              );\n            })} */}\n          </tbody>\n        </table>\n      </div>\n    )\n  );\n};\nexport default SongInfo;\n"],"mappings":";;;AAAA,SAASA,uBAAT,QAAwC,gBAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EACA,MAAM;IAAEG;EAAF,IAAWD,QAAQ,CAACE,KAA1B;EAEA,MAAM;IAAED,IAAI,EAAEE,KAAR;IAAeC;EAAf,IAA6BP,uBAAuB,CAACI,IAAI,CAACE,KAAL,CAAW,IAAX,CAAD,CAA1D;;EAEA,IAAIC,SAAJ,EAAe;IACb,oBAAO;MAAU,SAAS,EAAC,qBAApB;MAA0C,GAAG,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACDC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAAC,CAAD,CAAL,CAAS,YAAT,EAAuB,cAAvB,CAAZ;EACA,OACEF,IAAI,iBACF;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA,uBACE;QACE,GAAG,EAAEE,KAAK,CAAC,CAAD,CAAL,CAAS,YAAT,EAAuB,OAAvB,CADP;QAEE,KAAK,EAAC,OAFR;QAGE,MAAM,EAAC;MAHT;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA,UAAKA,KAAK,CAAC,CAAD,CAAL,CAAS,YAAT,EAAuB,MAAvB;IAAL;MAAA;MAAA;MAAA;IAAA,QARF,eASE;MAAO,SAAS,EAAC,qBAAjB;MAAA,wBACE;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAA,uBACE;UAAA,wBACE;YAAA,UAAKA,KAAK,CAAC,CAAD,CAAL,CAAS,YAAT,EAAuB,cAAvB;UAAL;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAKA,KAAK,CAAC,CAAD,CAAL,CAAS,YAAT,EAAuB,MAAvB;UAAL;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,UAAKA,KAAK,CAAC,CAAD,CAAL,CAAS,YAAT,EAAuB,aAAvB,EAAsC,CAAtC,EAAyC,aAAzC;UAAL;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA,UAAKA,KAAK,CAAC,CAAD,CAAL,CAAS,YAAT,EAAuB,aAAvB;UAAL;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAwCD,CAlDD;;GAAMJ,Q;UACaD,W,EAGkBD,uB;;;KAJ/BE,Q;AAmDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}